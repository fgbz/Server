<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="phalaenopsis.fgbz.dao.SystemDao" >

    <!--获取发布部门-->
    <select id="getOrganizationList" resultType="FG_Organization">
        select t.ID,t.ORGNAME,t.PARENTID,
        CASE
        WHEN (
        SELECT
        count(1)
        FROM
       m_sa_user link
        WHERE
        link.ORGID = t.id) = 0 then 1 else 0 end as candelete from m_sa_organization t
    </select>

    <!--删除技术标准类别-->
    <delete id="DeleteOrganization" parameterType="FG_Organization">
        DELETE from m_sa_organization where id = #{id}
    </delete>

    <!--新增或修改法规标准类别-->
    <insert id="AddOrUpdateOrganizationType" parameterType="FG_Organization">
        <selectKey keyProperty="count" resultType="int" order="BEFORE">
            select count(1) from m_sa_organization t where t.ID=#{id}
        </selectKey>

        <if test="count==0">
            INSERT into m_sa_organization  (ID,ORGNAME, PARENTID,INPUTUSERID,INPUTDATE,MODIFYDATE )
            VALUES (#{id},#{orgname},#{parentid},#{inputuserid,jdbcType=VARCHAR},now(),now());
        </if>
        <if test="count==1">
            UPDATE  m_sa_organization t  SET t.ORGNAME = #{orgname,jdbcType=VARCHAR},t.MODIFYUSERID=#{modifyuserid,jdbcType=VARCHAR},t.MODIFYDATE = now()
            where t.ID = #{id}
        </if>
    </insert>

    <!--获取子节点-->
    <select id="getChildNode" parameterType="String" resultType="FG_Organization">
        select t.ID,t.ORGNAME,t.PARENTID from m_sa_organization t where t.PARENTID=#{id}
    </select>

    <!--获取所有的菜单权限-->
    <select id="getAllMenus" resultType="FG_Menu">
        SELECT t.id,t.MENUNAME,t.parentid from m_sa_menu t
    </select>

    <!--获取所有的角色-->
    <select id="getAllRoles" resultType="FG_Role">
        select t.id ,t.ROLENAME from m_sa_role t where t.ROLENAME <![CDATA[  != ]]> 'admin'
    </select>

    <resultMap type="FG_Role" id="RoleListMap">
        <id column="id" property="id" />
        <result column="ROLENAME" property="rolename"></result>
        <result column="candelete" property="candelete"></result>
        <collection property="menus" column="menuid" ofType="FG_Menu">
            <id column="menuid" property="id" />
            <result column="MENUNAME" property="menuname"></result>
        </collection>
    </resultMap>

    <!--获取角色列表-->
    <select id="getRoles" parameterType="map" resultMap="RoleListMap">
        SELECT
	t.ID,
	t.ROLENAME,
	men.ID AS menuid,
	men.MENUNAME,
	case when (select count(1) from m_sa_user_role link where link.ROLEID = t.id)>0 THEN 0 else 1 end as candelete
FROM
    (SELECT  *from
	m_sa_role where 1=1 and ROLENAME <![CDATA[  != ]]> 'admin'
       <include refid="queryRole"></include>
	 order by MODIFYDATE   desc
	LIMIT #{startRow},#{endRow}) t
	LEFT JOIN m_sa_role_menu m ON t.id = m.ROLEID
	LEFT JOIN m_sa_menu men ON men.id = m.MENUID
        order by t.MODIFYDATE   desc
    </select>

    <select id="getRolesCount" resultType="int">
        SELECT count(1) FROM m_sa_role t where 1=1
        <include refid="queryRole"></include>
    </select>

    <sql id="queryRole">
        <if test="Name != null and Name != ''">
            and instr(ROLENAME,#{Name})> 0
        </if>
    </sql>

    <!--删除权限-->
    <delete id="deleteRoleByID" parameterType="String">
		DELETE  from m_sa_role where id=#{id};
		DELETE  from m_sa_role_menu where ROLEID=#{id};
    </delete>

    <!--新增或编辑角色-->
    <insert id="SaveOrEditRole" parameterType="FG_Role">

        <selectKey keyProperty="count" resultType="int" order="BEFORE">
            select count(1) from m_sa_role t where t.id=#{id}
        </selectKey>

        <if test="count == 0">

            insert into m_sa_role  (ID,ROLENAME,INPUTUSERID,INPUTDATE,MODIFYDATE) VALUES
            (#{id},#{rolename,jdbcType=VARCHAR},#{inputuserid,jdbcType=VARCHAR},now(),now());

        </if>
        <if test="count > 0">
            UPDATE m_sa_role set ROLENAME = #{rolename,jdbcType=VARCHAR},
            MODIFYUSERID = #{modifyuserid,jdbcType=VARCHAR},MODIFYDATE =now() where id=#{id};
        </if>

        DELETE  from m_sa_role_menu where ROLEID=#{id};

        <if test="menus !=null and menus.size()>0">
            insert into m_sa_role_menu  (ID,ROLEID,MENUID,INPUTUSERID,INPUTDATE) VALUES
            <foreach collection="menus" item="item" open="" close="" separator=",">
                (#{item.tableid},#{id},#{item.id},#{inputuserid,jdbcType=VARCHAR},now())
            </foreach>
        </if>


    </insert>

    <!--保存或编辑用户-->
    <insert id="SaveOrUpdateUser" parameterType="FG_User">

        <selectKey keyProperty="count" resultType="int" order="BEFORE">
            select count(1) from m_sa_user t where t.id=#{id}
        </selectKey>

        <if test="count == 0">
            insert into m_sa_user
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">
                    ID,
                </if>
                <if test="username != null">
                    USERNAME,
                </if>
                <if test="password != null">
                    PASSWORD,
                </if>
                <if test="userrealname != null">
                    userrealname,
                </if>
                <if test="email != null">
                    email,
                </if>
                <if test="mobile != null">
                    mobile,
                </if>
                <if test="orgid != null">
                    orgid,
                </if>
                <if test="inputuserid != null">
                    inputuserid,
                </if>
                    INPUTDATE,
                    MODIFYDATE,
                <if test="favoriteid != null">
                    FAVORITEID,
                </if>

            </trim>
            <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">
                    #{id,jdbcType=VARCHAR},
                </if>
                <if test="username != null">
                    #{username,jdbcType=VARCHAR},
                </if>
                <if test="password != null">
                    #{password,jdbcType=VARCHAR},
                </if>
                <if test="userrealname != null">
                    #{userrealname,jdbcType=VARCHAR},
                </if>
                <if test="email != null">
                    #{email,jdbcType=VARCHAR},
                </if>
                <if test="mobile != null">
                    #{mobile,jdbcType=VARCHAR},
                </if>
                <if test="orgid != null">
                    #{orgid,jdbcType=VARCHAR},
                </if>
                <if test="inputuserid != null">
                    #{inputuserid,jdbcType=VARCHAR},
                </if>
                   now(),
                now(),
                <if test="favoriteid != null">
                    #{favoriteid,jdbcType=VARCHAR},
                </if>
            </trim>

        </if>
        <if test="count>0">
            update  m_sa_user set
            <trim prefix="" suffix="" suffixOverrides=",">

                <if test="username != null">
                    username =  #{username,jdbcType=VARCHAR},
                </if>
                <if test="password != null">
                    password =  #{password,jdbcType=VARCHAR},
                </if>
                <if test="userrealname != null">
                    userrealname =#{userrealname,jdbcType=VARCHAR},
                </if>
                <if test="email != null">
                    email = #{email,jdbcType=VARCHAR},
                </if>
                <if test="mobile != null">
                    mobile= #{mobile,jdbcType=VARCHAR},
                </if>
                <if test="orgid != null">
                    orgid=  #{orgid,jdbcType=VARCHAR},
                </if>

                <if test="favoriteid != null">
                    favoriteid=   #{favoriteid,jdbcType=VARCHAR},
                </if>
                <if test="lastmodifyuserid != null">
                    lastmodifyuserid = #{lastmodifyuserid,jdbcType=VARCHAR},
                </if>
                    modifydate = now(),

            </trim>
            where ID=#{id}


        </if>

    </insert>

    <!--创建用户收藏夹-->
    <insert id="SaveUserFavorite" parameterType="FG_User">
        INSERT into m_bs_favorite (ID,NAME,PARENTID,INPUTUSERID,INPUTDATE) VALUES (#{favoriteid},'我的收藏夹',NULL ,#{inputuserid,jdbcType=VARCHAR},now())
    </insert>

    <!--删除用户角色-->
    <delete id="DeleteUserRolesByUserID" parameterType="String">
        delete from m_sa_user_role where USERID=#{id}
    </delete>

    <!--保存用户角色-->
    <insert id="SaveUserRoles" parameterType="FG_User">
        insert into m_sa_user_role  (ID,USERID,ROLEID,INPUTUSERID,INPUTDATE) VALUES
        <foreach collection="roles" item="item" open="" close="" separator=",">
            (#{item.tableid},#{id},#{item.id},#{inputuserid,jdbcType=VARCHAR},now())
        </foreach>
    </insert>

    <!--获取所有权限-->
    <select id="getUserMenu" parameterType="FG_User" resultType="FG_Menu">
        select DISTINCT  t.id ,t.MENUNAME from m_sa_menu t
         LEFT JOIN m_sa_role_menu m ON t.id = m.MENUID
	     where m.ROLEID in
        <foreach collection="roles" item="item" open="(" close=")" separator=",">
           #{item.id}
        </foreach>

    </select>


    <resultMap type="FG_User" id="usermap">
        <id column="id" property="id" />
        <result column="USERNAME" property="username"></result>
        <result column="PASSWORD" property="password"></result>

        <result column="USERREALNAME" property="userrealname"></result>
        <result column="EMAIL" property="email"></result>
        <result column="MOBILE" property="mobile"></result>
        <result column="ORGID" property="orgid"></result>
        <result column="ORGNAME" property="orgname"></result>
        <result column="favoriteid" property="favoriteid"></result>
        <collection property="roles" column="roleid" ofType="FG_Role">
            <id column="roleid" property="id" />
            <result column="ROLENAME" property="rolename"></result>
        </collection>
    </resultMap>

    <!--获取用户信息-->
    <select id="getUserByAccount" parameterType="map" resultMap="usermap">
        SELECT
        t.id,
        t.USERNAME,
        t.`PASSWORD`,
        t.USERREALNAME,
        t.EMAIL,
        t.MOBILE,
        t.ORGID,
        t.favoriteid,
        org.ORGNAME ,
        role.ID as roleid,
        role.ROLENAME
        FROM
        m_sa_user t
        LEFT JOIN m_sa_organization org ON t.ORGID = org.ID
        left join m_sa_user_role link on link.USERID = t.ID
        left join m_sa_role role on link.ROLEID = role.ID
        where t.USERNAME = #{account} and t.PASSWORD = #{password}

    </select>


    <!--获取用户列表-->
    <select id="getUsersList" parameterType="map" resultMap="usermap">
SELECT
	t.id,
	t.USERNAME,
	t.`PASSWORD`,
	t.USERREALNAME,
	t.EMAIL,
	t.MOBILE,
	t.ORGID,
    t.favoriteid,
	org.ORGNAME ,
	role.ID as roleid,
	role.ROLENAME
FROM
        (SELECT  *from
	m_sa_user where 1=1 and  USERNAME <![CDATA[  != ]]> 'admin'
        <include refid="queryUser"></include>
	order by modifydate desc
        LIMIT #{startRow},#{endRow}) t
	LEFT JOIN m_sa_organization org ON t.ORGID = org.ID
	left join m_sa_user_role link on link.USERID = t.ID
	left join m_sa_role role on link.ROLEID = role.ID
        order by t.modifydate desc


    </select>

    <!--查询列表总数-->
    <select id="getUserListCount" parameterType="map" resultType="int">
        select count(1) from m_sa_user t where 1=1
        <include refid="queryUser"></include>
    </select>

    <sql id="queryUser">
        <if test="Name != null and Name != ''">
            and instr(USERREALNAME,#{Name})> 0
        </if>

        <if test="TreeValue !=null and TreeValue!=''" >
            and ORGID  in
            <foreach collection="TreeValue" item="item" open="(" close=")" separator=",">
                #{item.id}
            </foreach>
        </if>

    </sql>

    <!--删除用户-->
    <delete id="deleteUser" parameterType="String">
        delete from m_sa_user where id=#{id}
    </delete>

    <!--删除收藏夹-->
    <delete id="deleteUserFav" parameterType="String">
        delete from m_bs_favorite where id=#{id}
    </delete>

    <!--验证是否重复-->
    <select id="checkUserRepeat" parameterType="FG_User" resultType="int">
          SELECT  count(1) from  m_sa_user t where t.USERNAME = #{username}
          <if test="id !=null and id !=''">
              and t.id <![CDATA[  != ]]> #{id}
          </if>
    </select>

    <!--获取审核状态-->
    <select id="getApproveSetting" resultType="String">
        SELECT t.VALUE from m_sa_setting t where t.KEY='isApprove'
    </select>

    <!--保存或修改审核状态-->
    <insert id="SaveOrUpdateApproveSetting" parameterType="map">
        <selectKey keyProperty="count" resultType="int" order="BEFORE">
            select count(1) from m_sa_setting t where t.KEY='isApprove'
        </selectKey>

        <if test="count==0">
            insert into m_sa_setting t (t.id,t.KEY,t.VALUE) VALUES (uuid(),'isApprove',#{value})
        </if>
        <if test="count>0">
            UPDATE m_sa_setting t set t.VALUE = #{value} where t.KEY = 'isApprove'
        </if>

    </insert>

    <!--待审核的数量-->
    <select id="getNeedCheckLawCount" resultType="int">
        SELECT count(1) FROM m_bs_lawstandard t where t.APPROVESTATUS =2
    </select>


</mapper>