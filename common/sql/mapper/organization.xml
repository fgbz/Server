<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="organization">

	<!-- 添加组织部门 -->
	<insert id="addOrg" parameterType="phalaenopsis.common.entity.Organization">
		insert into
		sys_Organization(ID,NAME,TYPE,GRADE,PARENTID,RANK)
		values(#{ID},#{Name},#{Type},#{Grade},#{ParentID},#{Rank})
	</insert>

	<!-- 更新组织部门 -->
	<update id="updateOrg" parameterType="phalaenopsis.common.entity.Organization">
		update sys_Organization set
		NAME=#{Name},TYPE=#{Type},GRADE=#{Grade},MAPLAYER=#{MapLayerGrade,jdbcType=NUMERIC},
		PARENTID=#{ParentID,jdbcType=VARCHAR},RANK=#{Rank,jdbcType=VARCHAR} where ID=#{ID}
	</update>

	<!-- 删除组织部门 -->
	<delete id="deleteOrg" parameterType="String">
		delete from sys_Organization where ID =#{ID}
	</delete>

	<!-- 添加组织部门下属管理区域 -->
	<insert id="addOrgRegion" parameterType="phalaenopsis.common.entity.OrganizationRegion">
		insert into
		sys_OrgRegions(ID,OrganizationID,RegionID)
		values(#{ID},#{OrganizationID},#{RegionID})
	</insert>

	<!-- 获取组织部门下属管理区域ID -->
	<select id="getOrgRegionID" parameterType="String" resultType="int">
		select regionid from sys_OrgRegions where ORGANIZATIONID =#{id}
	</select>

	<!-- 删除组织部门下属管理区域 -->
	<delete id="delOrgRegion" parameterType="String">
		delete from
		sys_OrgRegions where OrganizationID =#{id}
	</delete>

	<!-- 查询组织部门是否有子节点 -->
	<select id="getChildNumber" parameterType="String" resultType="int">
		select count(*) from sys_Organization where PARENTID=#{ID}
	</select>

	<!-- 根据ID查询组织部门信息 -->
	<select id="getOrganization" parameterType="String"
		resultType="phalaenopsis.common.entity.Organization">
		select id, name, type, parentid, rank, grade, maplayer as MapLayerGrade from sys_Organization where ID=#{ID}
	</select>

	<!-- 根据ID查询组织机构名称 -->
	<select id="getOrgName" parameterType="String" resultType="String">
		select NAME from sys_Organization where id=#{ID}
	</select>

	<!-- 获取树形结构的所有组织部门 -->
	<select id="getOrgTree" resultType="phalaenopsis.common.entity.TreeNode">
		select ID as ObjectID, NAME
		as Name, TYPE as ObjectType, PARENTID as ParentID,
		GRADE as Grade from sys_Organization order by ParentID, Rank
	</select>

	<!-- 根据获取树形结构本级及本级以下组织部门 -->
	<select id="getOrgsTreeByParentID" parameterType="String"
		resultType="phalaenopsis.common.entity.TreeNode">
		select ID as ObjectID, NAME as Name, TYPE as ObjectType,
		PARENTID as ParentID, GRADE as Grade
		from sys_Organization START WITH ID=#{parentID}
		CONNECT BY PRIOR ID=PARENTID order by ParentID, Rank
	</select>

	<!-- 根据组织id获取所在region的Name Province -->
	<select id="getRegionNameByOrgIDProvince" parameterType="String"
		resultType="String">
		select g.regionname from ss_region t
		inner join ss_region r
		on r.regionid=t.parentid
		inner join ss_region g on
		g.regionid=r.parentid
		where t.regionid=(select REGIONID from
		sys_OrgRegions where organizationId=#{orgID} and rownum = 1)
	</select>

	<!-- 根据组织id获取所在region的Name City -->
	<select id="getRegionNameByOrgIDCity" parameterType="String"
		resultType="String">
		select g.regionname||','||r.regionname from ss_region t
		inner join ss_region r on r.regionid=t.parentid
		inner join ss_region g on g.regionid=r.parentid
		where t.regionid=(select
		REGIONID from sys_OrgRegions where organizationId=#{orgID} and rownum
		= 1)
	</select>

	<!-- 根据组织id获取所在region的Name County -->
	<select id="getRegionNameByOrgIDCounty" parameterType="String"
		resultType="String">
		select g.regionname||','||r.regionname||','||t.regionname
		from ss_region t
		inner join ss_region r on r.regionid=t.parentid
		inner join ss_region g on g.regionid=r.parentid
		where t.regionid=(select
		REGIONID from sys_OrgRegions where organizationId=#{orgID} and rownum
		= 1)
	</select>

	<!-- 通过组织机构Id，查询对应行政区Id -->
	<select id="getRegionIdByOrgID" resultType="int" parameterType="map">
		select
		<if test="orgGrade==3">
			g.regionid
		</if>
		<if test="orgGrade==2">
			r.regionid
		</if>
		<if test="orgGrade==1">
			t.regionid
		</if>
		from ss_region t
		inner join ss_region r on r.regionid=t.parentid
		inner
		join ss_region g on g.regionid=r.parentid
		where t.regionid=(select
		REGIONID from sys_OrgRegions where organizationId=#{orgID} and rownum
		= 1)
	</select>

	<select id="getSubOrgByCountryId"  parameterType="map"  resultType="phalaenopsis.common.entity.Organization">
		select * from sys_organization o
		where o.parentid = (select case o.type when 1 then o.id  when 2 then o.parentid end from sys_organization o where o.id = #{orgID})
		and o.grade = #{orgGrade}
		and o.id in ( select r.organizationid from sys_orgregions r where
		r.regionid = #{reginId})
	</select>

</mapper>