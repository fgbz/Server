<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="phalaenopsis.patrolManagement.dao.PatrolRecordMapper">
	
	<resultMap type="phalaenopsis.patrolManagement.entity.PatrolLog" id="patrolLogResultMap">
		<!-- <id property="id" column="id" /> -->
		 <result property="patrolUserId" column="PATROLUSERID" /> 
		<result property="tempStartDate" column="tempStartDate" />
		<result property="tempEndDate" column="tempEndDate" />
		<result property="createDate" column="createdate" />
		<!-- <result property="patrolDistance" column="patroldistance" /> -->
		<result property="tempId" column="tempId" />
<!-- 		<result property="patrolContent" column="PATROLCONTENT" />
        <result property="status" column="STATUS" />-->
        <result property="orgId" column="ORGID" /> 
	</resultMap>
	
	<select id="getHistoryList" parameterType="phalaenopsis.patrolManagement.entity.PatrolLog" resultMap="patrolLogResultMap">
	   	select t.PATROLUSERID as patrolUserId,t.ORGID as orgId,t.createdate as createdate, wm_concat(TO_CHAR(t.patrolstartdate, 'YYYY-MM-DD HH24:MI:SS')) as tempStartDate,
wm_concat(TO_CHAR(t.PATROLENDDATE, 'YYYY-MM-DD HH24:MI:SS')) as tempEndDate,wm_concat(t.ID) as tempId 
 from (select * from  patrol_log 
	    WHERE 1 = 1 and  PATROLENDDATE is not null 
	    <!-- <if test="patrolUserId != null and patrolUserId !=''">
	        AND PATROLUSERID = #{patrolUserId}
	    </if> -->
	    <if test="listPatrolUserId != null and listPatrolUserId.size()>0 ">
	   		AND 
	        <foreach item="item" index="index" collection="listPatrolUserId" open="(" separator="or" close=")">  
				 PATROLUSERID in  #{item}  
			</foreach>   
	    </if>
	    <if test="startDate != null and startDate !=''">
	     	<![CDATA[AND CREATEDATE >= #{startDate}]]>
	    </if>
	    <if test="endDate != null and endDate !=''">
	  		  <![CDATA[AND CREATEDATE <= #{endDate}]]>
	    </if>
	     <if test="listPatrolOrgId != null and listPatrolOrgId.size()>0 ">
	   		AND 
	        <foreach item="item" index="index" collection="listPatrolOrgId" open="(" separator="or" close=")">  
				 ORGID in  #{item}  
			 </foreach>   
	    </if>
		) t  group by t.createdate,t.PATROLUSERID,t.ORGID  order by createdate desc
	</select>
	
	

	<!-- <select id="getHistoryList" parameterType="phalaenopsis.patrolManagement.entity.PatrolLog" resultMap="patrolLogResultMap">
	    SELECT 
	    	t.ID AS id,
        	t.PATROLUSERID AS patrolUserId,
        	t.PATROLSTARTDATE AS startDate,
        	t.PATROLENDDATE AS endDate,
        	t.CREATEDATE AS createDate,
        	t.PATROLDISTANCE AS patrolDistance,
        	t.PATROLCONTENT AS patrolContent,
        	t.STATUS AS status,
        	t.ORGID AS orgId
	    FROM PATROL_LOG t
	    WHERE 1 = 1 and t.PATROLENDDATE is not null
	    <if test="patrolUserId != null and patrolUserId !=''">
	        AND t.PATROLUSERID = #{patrolUserId}
	    </if>
	    <if test="startDate != null and startDate !=''">
	     	<![CDATA[AND t.CREATEDATE >= #{startDate}]]>
	    </if>
	    <if test="endDate != null and endDate !=''">
	  		  <![CDATA[AND t.CREATEDATE <= #{endDate}]]>
	    </if>
	    	order by t.CREATEDATE desc
	</select>
 -->
 
 	<select id="getListByCreateTime" parameterType="phalaenopsis.patrolManagement.entity.PatrolLog" resultMap="patrolLogResultMap">
	    SELECT 
	    	t.ID AS id,
        	t.PATROLUSERID AS patrolUserId,
        	t.PATROLSTARTDATE AS startDate,
        	t.PATROLENDDATE AS endDate,
        	t.CREATEDATE AS createDate,
        	t.PATROLDISTANCE AS patrolDistance,
        	t.PATROLCONTENT AS patrolContent,
        	t.STATUS AS status,
        	t.ORGID AS orgId
	    FROM PATROL_LOG t
	    WHERE 1 = 1
	    <if test="patrolUserId != null and patrolUserId !=''">
	        AND t.PATROLUSERID = #{patrolUserId}
	    </if>
	    <if test="createDate != null and createDate !=''">
	     	AND t.CREATEDATE = #{createDate}
	    </if>
	    order by t.ID
	</select>
 
	<select id="querySeq" resultType="java.lang.Long" >
		SELECT SEQUENCE_PATROL_LOG.NEXTVAL FROM DUAL
	</select>
	
	<update id="editEntity" parameterType="phalaenopsis.patrolManagement.entity.PatrolLog">
		update PATROL_LOG
		<set>
			<if test="endDate != null">PATROLENDDATE=#{endDate},</if>
			<if test="patrolDistance != null">PATROLDISTANCE=#{patrolDistance},</if>
			<if test="patrolContent != null">PATROLCONTENT=#{patrolContent},</if>
			<if test="status != null">STATUS=#{status},</if>
				TIMING = sysdate
		</set>
		where ID = #{id}
	</update>
	
 	<insert id="addEntity" parameterType="phalaenopsis.patrolManagement.entity.PatrolLog">
 		<!-- <selectKey keyProperty="id" resultType="long" order="BEFORE">
			SELECT SEQUENCE_PATROL_LOG.NEXTVAL FROM DUAL
		</selectKey> -->
	    INSERT INTO PATROL_LOG
	      (ID,PATROLUSERID,PATROLSTARTDATE,PATROLENDDATE,CREATEDATE,PATROLDISTANCE,PATROLCONTENT,STATUS,ORGID,TIMING)
	    VALUES
	      (#{id},#{patrolUserId,jdbcType=VARCHAR},#{startDate,jdbcType=TIMESTAMP},#{endDate,jdbcType=TIMESTAMP},#{createDate,jdbcType=DATE},#{patrolDistance,jdbcType=DOUBLE},#{patrolContent,jdbcType=VARCHAR},#{status,jdbcType=INTEGER},#{orgId,jdbcType=VARCHAR},sysdate)
	</insert>


	<select id="getAllRecordList" parameterType="map" resultType="PatrolRecord">
		select * from (select temp.*, rownum num from (select t.*,row_number() OVER(PARTITION BY patroluserid,createdate ORDER BY t.id desc) as row_flg    
          			from PATROL_LOG t  where t.status=0 order by t.patrolstartdate desc) temp 
				where temp.row_flg  = '1' 
		<include refid="RecordList"></include> 
		) where num between #{startNum} and #{endNum}
	</select>
	
	<select id="getAllRecordCount" parameterType="map" resultType="int">
		select count(*) 
				from (
        			 select t.*,row_number() OVER(PARTITION BY patroluserid,createdate ORDER BY t.id desc) as row_flg    
          			from PATROL_LOG t  where t.status=0 ) temp 
				where temp.row_flg  = '1' 
		<include refid="RecordList"></include> 
	</select>
	
	<select id="getRecordList" parameterType="map" resultType="PatrolRecord">
		select * from (select temp.* , rownum num from  (select t.*,row_number() OVER(PARTITION BY patroluserid,createdate ORDER BY t.id desc) as row_flg    
          			from PATROL_LOG t  where t.status=0 order by t.patrolstartdate desc ) temp 
				where temp.row_flg  = '1' 
		<if test="organizationID!=null and organizationID!=''">
			and orgid in (select id from  SYS_ORGANIZATION o where o.id = #{organizationID} or o.parentid = #{organizationID})  
		</if> 
		<include refid="RecordList"></include> 
		) where num between #{startNum} and #{endNum}
	</select>
	
	<select id="getRecordCount" parameterType="map" resultType="int">
		select count(*) 
				from (
        			 select t.*,row_number() OVER(PARTITION BY patroluserid,createdate ORDER BY t.id desc) as row_flg    
          			from PATROL_LOG t  where t.status=0) temp 
				where temp.row_flg  = '1' 
		<if test="organizationID!=null and organizationID!=''"> 
			and orgid in (select id from  SYS_ORGANIZATION o where o.id = #{organizationID} or o.parentid = #{organizationID}) 
		</if> 
		<include refid="RecordList"></include> 
	</select>
	
	<sql id="RecordList"> 
		<if test="patrolUserName!=null and patrolUserName!=''">
			 and patroluserid in (select id from  SYS_USER o where o.name like '%'||#{patrolUserName}||'%') 
		</if>
		<if test="startDate!=null and startDate!=''">
			and createdate <![CDATA[>=]]> #{startDate} 
		</if>
		<if test="endDate!=null and endDate!=''">
			and createdate <![CDATA[<=]]> #{endDate} 
		</if>
	</sql>
	
	<select id="getSamePatrolRecord" parameterType="map" resultType="PatrolLog">
		select * from PATROL_LOG t where t.createdate = #{createDate} and t.patroluserid = #{patrolUserId} and status = 0  order by patrolstartdate desc
	</select>
	
	<select id="getSamePatrolDistance" parameterType="map" resultType="Double">
		select sum(patroldistance) from PATROL_LOG t where t.createdate = #{createDate} and t.patroluserid = #{patrolUserId} and status = 0 
	</select>
	
	<update id="deletePatrolRecords" parameterType="map">
		update PATROL_LOG t set t.status = 1 where t.createdate = #{createDate} and t.patroluserid = #{patrolUserId}
	</update>
	
	<select id="selectPatrolById" parameterType="String" resultType="PatrolLog">
		select * from PATROL_LOG t where t.id = #{id}
	</select>
	
	<select id="getFirstPatrolId" parameterType="phalaenopsis.patrolManagement.entity.PatrolLog" resultType="String">
		<!-- select t.id from PATROL_LOG t where t.patroluserid = #{patrolUserId} and t.createdate = #{createDate} and t.status <![CDATA[<>]]> 1 and rownum <![CDATA[<=]]> 1  order by t.patrolstartdate -->
		select id from(select rownum row_id ,t.* from (select * from patrol_log where patroluserid = #{patrolUserId} and createdate = #{createDate} and status <![CDATA[<>]]> 1 order by patrolstartdate asc)t) where row_id <![CDATA[<=]]> 1
	</select>
	
	<select id="getOrgInfoByName" resultType="phalaenopsis.common.entity.Organization" parameterType="Map">
		select * from sys_Organization  where name like '%'||#{info}||'%' and id in( select id
		from sys_Organization START WITH ID=#{organizationID}
		CONNECT BY PRIOR ID=PARENTID)
	</select>
	<select id="getproOrg" resultType="phalaenopsis.common.entity.Organization">
		select * from sys_Organization t where t.grade = 3 and t.parentid is null
	</select>
	<select id="getUserInfoByName" resultType="phalaenopsis.patrolManagement.entity.PatrolUserInfo" parameterType="Map">
		select t.id as userID, t.isonline as isOnline, t.name as userName, t.organizationID as organizationID, s.parentid as parentId, s.grade as orgGrade, s.name as organizationName from SYS_USER t ,SYS_ORGANIZATION s where t.organizationid = s.id and t.name like '%'||#{info}||'%' and t.organizationid in ( select id
   		from sys_Organization START WITH ID=#{organizationID}
		CONNECT BY PRIOR ID=PARENTID)
	</select>
	
	<select id="getOnlineNum" parameterType="String" resultType="Integer">
		select count(*) from SYS_USER t where t.isonline='on' and t.organizationid in ( select id
        from sys_Organization START WITH ID=#{organizationID}
    	CONNECT BY PRIOR ID=PARENTID)
	</select>
	
	<select id="getlineNum" parameterType="String" resultType="Integer">
		select count(*) from SYS_USER t where t.organizationid in ( select id
        from sys_Organization START WITH ID=#{organizationID}
    	CONNECT BY PRIOR ID=PARENTID)
	</select>
	
	<select id="getCurrentOnlineNum" parameterType="String" resultType="Integer">
		select count(*) from SYS_USER t where t.isonline='on' and t.organizationid = #{organizationID}
	</select>
	
	<select id="getCurrentlineNum" parameterType="String" resultType="Integer">
		select count(*) from SYS_USER t where t.organizationid = #{organizationID}
	</select>
	
	<select id="getUserByOrgId" parameterType="map" resultType="phalaenopsis.common.entity.User">
		select * from 
			(
			 select temp.* , rownum num from
    			(select * from SYS_USER t where t.organizationid in ( select id
        		 from sys_Organization START WITH ID=#{organizationID}
          		 CONNECT BY PRIOR ID=PARENTID) order by isonline desc
     			 ) temp
			)
 		where  num between #{startNum} and #{endNum}
        <!-- select t.*,o.name as organizationName from SYS_USER t ,sys_organization o where  t.organizationid = o.id and t.organizationid = #{organizationID} order by isonline desc
		 -->
	</select>
	
	<select id="getUserCountByOrgId" parameterType="map" resultType="Integer">
		select count(*) from SYS_USER t where t.organizationid in ( select id
        	from sys_Organization START WITH ID=#{organizationID}
            CONNECT BY PRIOR ID=PARENTID) order by isonline desc
	</select>
	
	<select id="getOnlineUserByOrgId" parameterType="String" resultType="phalaenopsis.common.entity.User">
        select t.*,s.name as organizationName from SYS_USER t, sys_organization s where t.isonline='on' and t.organizationid in ( select id
        from sys_Organization START WITH ID=#{organizationID}
        CONNECT BY PRIOR ID=PARENTID) and organizationid = s.id
	</select>
	
	<select id="getUserByGrade" parameterType="String" resultType="phalaenopsis.common.entity.User">
		select t.*,o.name as organizationName from SYS_USER t ,sys_organization o 
		where  t.organizationid = o.id and t.organizationid in (select id from sys_Organization s where s.grade = 3 and (s.parentid  = #{orgId} or s.parentid is null)) order by isonline desc
	</select>
</mapper>