<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="phalaenopsis.systemmanagement.dao.IRoleDao">

	<resultMap type="phalaenopsis.common.entity.Role" id="OrderAndPermissionResultMap">
		<id column="id" property="id"/>
		<result column="Name" property="name"/>
		<result column="Issys" property="issys"/>
		<collection property="permissions"
			ofType="phalaenopsis.common.entity.Permission">
			<id column="code" property="code" />
			<result column="name" property="name" />
			<result column="type" property="type" />
			<result column="parentcode" property="parentCode" />
			<result column="url" property="url" /> 
		</collection>
	</resultMap>

	<select id="duplicateRoleName" parameterType="string"
		resultType="int">
		select count(1) from Sys_Role where Name = #{name} and Id
		!= #{id}
	</select>

	<!-- 获取所有权限列表 -->
	<select id="getPermissions" resultType="Permission">
		select * from
		sys_permission
	</select>


	<!-- 获取所有角色列表 -->
	<select id="getRoles" resultType="Role">
		select * from Sys_Role
	</select>

	<select id="getRole" parameterType="string" resultMap="OrderAndPermissionResultMap">
		  select r.*, p.code, p.name, p.type, p.parentcode, p.url from Sys_Role r
			  left join sys_rolepermissions rp on rp.roleid = r.id
			  left join sys_permission p on p.code = rp.permissioncode
			   where r.id = #{id}
	</select>   

	<!-- 根据条件获取角色数量 -->
	<select id="getRoleListCount" resultType="int">
		select count(1) FROM Sys_Role
		<if test="SearchText!=null and SearchText !=''">
			where name like '%'||#{SearchText}||'%'
		</if>
	</select>


	<!-- 获取分页的角色列表 -->
	<select id="getRoleList" resultType="Role">
		select id, name, Issys, RN from ( select id, name, Issys, rownum
		as RN
		from Sys_Role t
		<if test="SearchText!=null and SearchText !=''">
			where name like '%'||#{SearchText}||'%'
		</if>
		) a where a.rn between #{startRow} and #{endRow}
	</select>

	<!-- 修改角色信息 -->
	<update id="updateRole" parameterType="Role">
		update sys_role set
		<if test="'name'!='' ">
			name = #{name},
		</if>
		<if test="'issys'!='' ">
			issys = #{issys}
		</if>
		where id = #{id}
	</update>


	<!-- 添加角色对应的权限 -->
	<insert id="addRolePermissions" parameterType="map"
		useGeneratedKeys="false">
		INSERT ALL
		<foreach collection="permissions" item="item" index="index"
			separator="">
			into sys_rolepermissions (ID,ROLEID,PERMISSIONCODE) values
			(sys_guid(),#{id} ,#{item.code})
		</foreach>
		SELECT 1 FROM DUAL
	</insert>


	<!-- 删除角色关联关系 -->
	<delete id="deleteRolePermissions" parameterType="String">
		delete
		sys_RolePermissions where ROLEID= #{id}
	</delete>

	<!-- 删除用户与角色关联信息 -->
	<delete id="deleteUserRoles" parameterType="String">
		delete
		sys_UserRoles
		where ROLEID= #{id}
	</delete>

	<delete id="deleteRole" parameterType="string">
		delete Sys_Role where
		Id=#{id}
	</delete>

	<!-- 得到用户所有的角色 -->
	<select id="getRoleByUserId" parameterType="string" resultType="Role">
		select * from Sys_Role
		left join SYS_USERROLES on Sys_Role.Id =
		SYS_USERROLES.Roleid and
		SYS_USERROLES.Userid =#{id}
	</select>

	<!-- 添加角色 -->
	<insert id="addRole" parameterType="Role">
		insert into sys_role (id,
		name, issys)
		values
		(#{id},#{name},#{issys,javaType=boolean,jdbcType=NUMERIC})
	</insert>
	
	<!--20170327添加 根据用户id 获取用户对应的角色 -->
	<select id="getRolesFromUserId" parameterType="String"
		resultType="String">
		select roleid from SYS_USERROLES where userid=#{ID}
	</select>
	
	<!--20170327添加 根据角色id获取角色所有内容 -->
	<select id="getRolesFromRoleId" parameterType="String"
		resultType="Role">
		select * from Sys_Role where id=#{ID}
	</select>

</mapper>